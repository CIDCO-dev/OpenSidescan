INCLUDES=-IC:\\Users\\cidco\\Library\\eigen \
	 -I"C:\\Program Files\\OpenCV-3.4.7\\opencv\\release\\install\\include"
	
LIBS  = "C:\Program Files\OpenCV-3.4.7\opencv\release\install\x64\vc15\lib\opencv_core347.lib" \
	"C:\Program Files\OpenCV-3.4.7\opencv\release\install\x64\vc15\lib\opencv_features2d347.lib" \
	"C:\Program Files\OpenCV-3.4.7\opencv\release\install\x64\vc15\lib\opencv_imgcodecs347.lib" \
	"C:\Program Files\OpenCV-3.4.7\opencv\release\install\x64\vc15\lib\opencv_imgproc347.lib" \
	"C:\Program Files\OpenCV-3.4.7\opencv\release\install\x64\vc15\lib\opencv_ml347.lib" \
	"C:\Program Files\OpenCV-3.4.7\opencv\release\install\x64\vc15\lib\opencv_photo347.lib" \
	"C:\Program Files\OpenCV-3.4.7\opencv\release\install\x64\vc15\lib\opencv_flann347.lib" \
	"C:\Program Files\OpenCV-3.4.7\opencv\release\install\x64\vc15\lib\opencv_highgui347.lib" \
	"C:\Program Files\OpenCV-3.4.7\opencv\release\install\x64\vc15\lib\opencv_calib3d347.lib"

SS=../../../src/OpenSidescan
SSFILES=$(SS)/sidescan/sidescanfile.cpp \
	$(SS)/sidescan/sidescanimager.cpp \
	$(SS)/sidescan/sidescanimage.cpp \
	$(SS)/inventoryobject/inventoryobject.cpp \
	$(SS)/detector/roidetector.cpp \
	$(SS)/detector/detector.cpp \
	$(SS)/detector/houghdetector.cpp \
	$(SS)/utilities/opencvhelper.cpp

THIRDPARTY=../../../src/thirdParty
THIRDPARTYFILES=$(THIRDPARTY)/MBES-lib/src/datagrams/DatagramParser.cpp  \
		$(THIRDPARTY)/MBES-lib/src/datagrams/DatagramParserFactory.cpp  \
		$(THIRDPARTY)/MBES-lib/src/datagrams/s7k/S7kParser.cpp \
		$(THIRDPARTY)/MBES-lib/src/datagrams/kongsberg/KongsbergParser.cpp \
		$(THIRDPARTY)/MBES-lib/src/datagrams/xtf/XtfParser.cpp \
		$(THIRDPARTY)/MBES-lib/src/utils/NmeaUtils.cpp \
		$(THIRDPARTY)/MBES-lib/src/utils/StringUtils.cpp \
		$(THIRDPARTY)/MBES-lib/src/sidescan/SidescanPing.cpp \
		$(THIRDPARTY)/opencv/apps/createsamples/utility.cpp

exec_dir=build\\bin
doc_dir=build\\doc

test_exec_dir=build\\test\\bin
test_work_dir=build\\test\\work
test_result_dir=build\\reports

locktest: winlocker
	mkdir $(test_result_dir)
	call cd
	call "%windows10_x64_BUILD_TOOLS_ROOT%\\VC\\Auxiliary\\Build\\vcvarsall.bat" x64 && cd build\\test\\bin &&cl ..\\..\\..\\test\\winLockCatchMain.cpp $(INCLUDES) /EHsc $(THIRDPARTYFILES) $(SSFILES) $(LIBS) /FewinLockTest.exe
	

winlocker:
	mkdir $(test_exec_dir)
	call cd
	call "%windows10_x64_BUILD_TOOLS_ROOT%\\VC\\Auxiliary\\Build\\vcvarsall.bat" x64 && cd build\\test\\bin &&cl ..\\..\\..\\test\\locker\\winlocker.cpp /EHsc /Fewinlocker.exe
	

test: 
	mkdir $(test_exec_dir)
	mkdir $(test_result_dir)
	mkdir $(test_work_dir)
	call cd
	call "%windows10_x64_BUILD_TOOLS_ROOT%\\VC\\Auxiliary\\Build\\vcvarsall.bat" x64 && cd build\\test\\bin &&cl ..\\..\\..\\test\\main.cpp $(INCLUDES) /EHsc $(THIRDPARTYFILES) $(SSFILES) $(LIBS) /Fetests.exe
	call cd
	call $(test_exec_dir)\\tests.exe -r junit -o $(test_result_dir)\\opensidescan-win-test-report.xml
	call cd

doc:
	mkdir $(doc_dir)
	
clean:
	if exists build\ rmdir /q /s build
	

.PHONY: all test clean doc
